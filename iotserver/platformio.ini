; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
lib_deps = lvgl/lvgl@^9.1.0

build_flags =
  ; -D LV_CONF_PATH="../../../../../src/lv_conf.h"
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  -D LV_USE_DEMO_WIDGETS=1

[env:raspberrypi_3b]
platform = linux_arm
board = raspberrypi_3b

[env:emulator]
platform = native

extra_scripts = 
  pre:support/sdl2_paths.py ; Tries to find SDL2 include and lib paths on your system - specifically for MacOS w/ Homebrew
  post:support/sdl2_build_extra.py

build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -l SDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D LV_USE_SDL
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=320
  -D SDL_ZOOM=1
  -D LV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"

build_src_filter =
  +<*>
  +<../hal/sdl2>
  ; Force compile LVGL demo, remove when working on your own project
  +<../.pio/libdeps/emulator_64bits/lvgl/demos>
